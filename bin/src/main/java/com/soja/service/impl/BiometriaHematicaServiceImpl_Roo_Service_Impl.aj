// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.soja.service.impl;

import com.soja.domain.BiometriaHematica;
import com.soja.domain.Persona;
import com.soja.repository.BiometriaHematicaRepository;
import com.soja.service.impl.BiometriaHematicaServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.web.validation.MessageI18n;
import java.util.List;
import java.util.Map;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect BiometriaHematicaServiceImpl_Roo_Service_Impl {
    
    declare @type: BiometriaHematicaServiceImpl: @Service;
    
    declare @type: BiometriaHematicaServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private BiometriaHematicaRepository BiometriaHematicaServiceImpl.biometriaHematicaRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param biometriaHematicaRepository
     */
    @Autowired
    public BiometriaHematicaServiceImpl.new(BiometriaHematicaRepository biometriaHematicaRepository) {
        setBiometriaHematicaRepository(biometriaHematicaRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return BiometriaHematicaRepository
     */
    public BiometriaHematicaRepository BiometriaHematicaServiceImpl.getBiometriaHematicaRepository() {
        return biometriaHematicaRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param biometriaHematicaRepository
     */
    public void BiometriaHematicaServiceImpl.setBiometriaHematicaRepository(BiometriaHematicaRepository biometriaHematicaRepository) {
        this.biometriaHematicaRepository = biometriaHematicaRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param biometriahematica
     * @return Map
     */
    public Map<String, List<MessageI18n>> BiometriaHematicaServiceImpl.validate(BiometriaHematica biometriahematica) {
        Map<String, List<MessageI18n>> messages = new java.util.HashMap<String, List<MessageI18n>>();
        
        // TODO: IMPLEMENT HERE THE VALIDATION OF YOUR ENTITY
        
        return messages;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param biometriaHematica
     */
    @Transactional
    public void BiometriaHematicaServiceImpl.delete(BiometriaHematica biometriaHematica) {
        // Clear bidirectional many-to-one child relationship with Persona
        if (biometriaHematica.getPersona() != null) {
            biometriaHematica.getPersona().getBiometriaHematica().remove(biometriaHematica);
        }
        
        getBiometriaHematicaRepository().delete(biometriaHematica);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<BiometriaHematica> BiometriaHematicaServiceImpl.save(Iterable<BiometriaHematica> entities) {
        return getBiometriaHematicaRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void BiometriaHematicaServiceImpl.delete(Iterable<Long> ids) {
        List<BiometriaHematica> toDelete = getBiometriaHematicaRepository().findAll(ids);
        getBiometriaHematicaRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return BiometriaHematica
     */
    @Transactional
    public BiometriaHematica BiometriaHematicaServiceImpl.save(BiometriaHematica entity) {
        return getBiometriaHematicaRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return BiometriaHematica
     */
    public BiometriaHematica BiometriaHematicaServiceImpl.findOne(Long id) {
        return getBiometriaHematicaRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return BiometriaHematica
     */
    public BiometriaHematica BiometriaHematicaServiceImpl.findOneForUpdate(Long id) {
        return getBiometriaHematicaRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<BiometriaHematica> BiometriaHematicaServiceImpl.findAll(Iterable<Long> ids) {
        return getBiometriaHematicaRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<BiometriaHematica> BiometriaHematicaServiceImpl.findAll() {
        return getBiometriaHematicaRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long BiometriaHematicaServiceImpl.count() {
        return getBiometriaHematicaRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<BiometriaHematica> BiometriaHematicaServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getBiometriaHematicaRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<BiometriaHematica> BiometriaHematicaServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getBiometriaHematicaRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param persona
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<BiometriaHematica> BiometriaHematicaServiceImpl.findByPersona(Persona persona, GlobalSearch globalSearch, Pageable pageable) {
        return getBiometriaHematicaRepository().findByPersona(persona, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param persona
     * @return Long
     */
    public long BiometriaHematicaServiceImpl.countByPersona(Persona persona) {
        return getBiometriaHematicaRepository().countByPersona(persona);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<BiometriaHematica> BiometriaHematicaServiceImpl.getEntityType() {
        return BiometriaHematica.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> BiometriaHematicaServiceImpl.getIdType() {
        return Long.class;
    }
    
}
