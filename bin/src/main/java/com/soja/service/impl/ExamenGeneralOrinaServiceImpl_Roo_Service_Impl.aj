// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.soja.service.impl;

import com.soja.domain.ExamenGeneralOrina;
import com.soja.domain.Persona;
import com.soja.repository.ExamenGeneralOrinaRepository;
import com.soja.service.impl.ExamenGeneralOrinaServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.web.validation.MessageI18n;
import java.util.List;
import java.util.Map;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect ExamenGeneralOrinaServiceImpl_Roo_Service_Impl {
    
    declare @type: ExamenGeneralOrinaServiceImpl: @Service;
    
    declare @type: ExamenGeneralOrinaServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private ExamenGeneralOrinaRepository ExamenGeneralOrinaServiceImpl.examenGeneralOrinaRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param examenGeneralOrinaRepository
     */
    @Autowired
    public ExamenGeneralOrinaServiceImpl.new(ExamenGeneralOrinaRepository examenGeneralOrinaRepository) {
        setExamenGeneralOrinaRepository(examenGeneralOrinaRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return ExamenGeneralOrinaRepository
     */
    public ExamenGeneralOrinaRepository ExamenGeneralOrinaServiceImpl.getExamenGeneralOrinaRepository() {
        return examenGeneralOrinaRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param examenGeneralOrinaRepository
     */
    public void ExamenGeneralOrinaServiceImpl.setExamenGeneralOrinaRepository(ExamenGeneralOrinaRepository examenGeneralOrinaRepository) {
        this.examenGeneralOrinaRepository = examenGeneralOrinaRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param examengeneralorina
     * @return Map
     */
    public Map<String, List<MessageI18n>> ExamenGeneralOrinaServiceImpl.validate(ExamenGeneralOrina examengeneralorina) {
        Map<String, List<MessageI18n>> messages = new java.util.HashMap<String, List<MessageI18n>>();
        
        // TODO: IMPLEMENT HERE THE VALIDATION OF YOUR ENTITY
        
        return messages;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param examenGeneralOrina
     */
    @Transactional
    public void ExamenGeneralOrinaServiceImpl.delete(ExamenGeneralOrina examenGeneralOrina) {
        // Clear bidirectional many-to-one child relationship with Persona
        if (examenGeneralOrina.getPersona() != null) {
            examenGeneralOrina.getPersona().getExamenGeneralOrina().remove(examenGeneralOrina);
        }
        
        getExamenGeneralOrinaRepository().delete(examenGeneralOrina);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<ExamenGeneralOrina> ExamenGeneralOrinaServiceImpl.save(Iterable<ExamenGeneralOrina> entities) {
        return getExamenGeneralOrinaRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void ExamenGeneralOrinaServiceImpl.delete(Iterable<Long> ids) {
        List<ExamenGeneralOrina> toDelete = getExamenGeneralOrinaRepository().findAll(ids);
        getExamenGeneralOrinaRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return ExamenGeneralOrina
     */
    @Transactional
    public ExamenGeneralOrina ExamenGeneralOrinaServiceImpl.save(ExamenGeneralOrina entity) {
        return getExamenGeneralOrinaRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return ExamenGeneralOrina
     */
    public ExamenGeneralOrina ExamenGeneralOrinaServiceImpl.findOne(Long id) {
        return getExamenGeneralOrinaRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return ExamenGeneralOrina
     */
    public ExamenGeneralOrina ExamenGeneralOrinaServiceImpl.findOneForUpdate(Long id) {
        return getExamenGeneralOrinaRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<ExamenGeneralOrina> ExamenGeneralOrinaServiceImpl.findAll(Iterable<Long> ids) {
        return getExamenGeneralOrinaRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<ExamenGeneralOrina> ExamenGeneralOrinaServiceImpl.findAll() {
        return getExamenGeneralOrinaRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long ExamenGeneralOrinaServiceImpl.count() {
        return getExamenGeneralOrinaRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<ExamenGeneralOrina> ExamenGeneralOrinaServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getExamenGeneralOrinaRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<ExamenGeneralOrina> ExamenGeneralOrinaServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getExamenGeneralOrinaRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param persona
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<ExamenGeneralOrina> ExamenGeneralOrinaServiceImpl.findByPersona(Persona persona, GlobalSearch globalSearch, Pageable pageable) {
        return getExamenGeneralOrinaRepository().findByPersona(persona, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param persona
     * @return Long
     */
    public long ExamenGeneralOrinaServiceImpl.countByPersona(Persona persona) {
        return getExamenGeneralOrinaRepository().countByPersona(persona);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<ExamenGeneralOrina> ExamenGeneralOrinaServiceImpl.getEntityType() {
        return ExamenGeneralOrina.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> ExamenGeneralOrinaServiceImpl.getIdType() {
        return Long.class;
    }
    
}
