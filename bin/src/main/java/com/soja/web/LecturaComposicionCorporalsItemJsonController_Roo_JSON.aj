// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.soja.web;

import com.soja.domain.LecturaComposicionCorporal;
import com.soja.service.api.LecturaComposicionCorporalService;
import com.soja.web.LecturaComposicionCorporalsItemJsonController;
import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;

privileged aspect LecturaComposicionCorporalsItemJsonController_Roo_JSON {
    
    declare @type: LecturaComposicionCorporalsItemJsonController: @RestController;
    
    declare @type: LecturaComposicionCorporalsItemJsonController: @RequestMapping(value = "/api/lecturacomposicioncorporals/{lecturaComposicionCorporal}", name = "LecturaComposicionCorporalsItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private LecturaComposicionCorporalService LecturaComposicionCorporalsItemJsonController.lecturaComposicionCorporalService;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param lecturaComposicionCorporalService
     */
    @Autowired
    public LecturaComposicionCorporalsItemJsonController.new(LecturaComposicionCorporalService lecturaComposicionCorporalService) {
        this.lecturaComposicionCorporalService = lecturaComposicionCorporalService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return LecturaComposicionCorporalService
     */
    public LecturaComposicionCorporalService LecturaComposicionCorporalsItemJsonController.getLecturaComposicionCorporalService() {
        return lecturaComposicionCorporalService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param lecturaComposicionCorporalService
     */
    public void LecturaComposicionCorporalsItemJsonController.setLecturaComposicionCorporalService(LecturaComposicionCorporalService lecturaComposicionCorporalService) {
        this.lecturaComposicionCorporalService = lecturaComposicionCorporalService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return LecturaComposicionCorporal
     */
    @ModelAttribute
    public LecturaComposicionCorporal LecturaComposicionCorporalsItemJsonController.getLecturaComposicionCorporal(@PathVariable("lecturaComposicionCorporal") Long id) {
        LecturaComposicionCorporal lecturaComposicionCorporal = lecturaComposicionCorporalService.findOne(id);
        if (lecturaComposicionCorporal == null) {
            throw new NotFoundException(String.format("LecturaComposicionCorporal with identifier '%s' not found",id));
        }
        return lecturaComposicionCorporal;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param lecturaComposicionCorporal
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> LecturaComposicionCorporalsItemJsonController.show(@ModelAttribute LecturaComposicionCorporal lecturaComposicionCorporal) {
        return ResponseEntity.ok(lecturaComposicionCorporal);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param lecturaComposicionCorporal
     * @return UriComponents
     */
    public static UriComponents LecturaComposicionCorporalsItemJsonController.showURI(LecturaComposicionCorporal lecturaComposicionCorporal) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(LecturaComposicionCorporalsItemJsonController.class).show(lecturaComposicionCorporal))
            .buildAndExpand(lecturaComposicionCorporal.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedLecturaComposicionCorporal
     * @param lecturaComposicionCorporal
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> LecturaComposicionCorporalsItemJsonController.update(@ModelAttribute LecturaComposicionCorporal storedLecturaComposicionCorporal, @Valid @RequestBody LecturaComposicionCorporal lecturaComposicionCorporal, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        lecturaComposicionCorporal.setId(storedLecturaComposicionCorporal.getId());
        getLecturaComposicionCorporalService().save(lecturaComposicionCorporal);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param lecturaComposicionCorporal
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> LecturaComposicionCorporalsItemJsonController.delete(@ModelAttribute LecturaComposicionCorporal lecturaComposicionCorporal) {
        getLecturaComposicionCorporalService().delete(lecturaComposicionCorporal);
        return ResponseEntity.ok().build();
    }
    
}
